name: ci

on:
  pull_request:
    branches-ignore: [ "dev/*" ]
#  push:
#    branches: [ "master" ]

env:
  TF_VAR_ssh_private_key: ${{ secrets.CI_SSH_KEY }}
  TF_VAR_linode_token: ${{ secrets.CI_LINODE_TOKEN }}
  TF_VAR_root_password: ${{ secrets.CI_ROOT_PASSWORD }}
  TF_DIR: "./tests/e2e"
  TF_VAR_git_repository: "${{ github.event.pull_request.head.repo.full_name }}"
  TF_VAR_git_commit_sha: "${{ github.sha }}"
  TF_VAR_git_ref_name: "${{ github.event.pull_request.head.ref }}"

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{github.event.pull_request.head.ref}}
        repository: ${{github.event.pull_request.head.repo.full_name}}

    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.7"

    - name: terraform init
      working-directory: "${{ env.TF_DIR }}"
      run: terraform init

    - name: terraform plan
      working-directory: "${{ env.TF_DIR }}"
      run: terraform plan

    - name: terraform apply
      working-directory: "${{ env.TF_DIR }}"
      run: terraform apply -auto-approve

    - name: set CI_INSTANCE_IP variable
      working-directory: "${{ env.TF_DIR }}"
      run: |
        echo "CI_INSTANCE_IP=$(cat terraform.tfstate | jq -r '.outputs.ci_instance_ip.value')" >> $GITHUB_ENV

    - name: show CI_INSTANCE_IP
      run: | 
        echo $CI_INSTANCE_IP

    - name: terraform destroy
      if: always()
      working-directory: "${{ env.TF_DIR }}"
      run: terraform destroy -auto-approve
